@model DealDouble.Web.ViewModels.CreateAuctionViewModel


<div class="modal-header">
    <h5 class="modal-title">Edit Auction</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
<form id="EditForm">


    <div class="modal-body">
        <input type="hidden" name="ID" value="@Model.ID" />


        <div class="form-group">
            <label>Title</label>
            <input class="form-control" name="Title" value="@Model.Title" />
        </div>

        <div class="form-group">
            <label>Description</label>
            <select class="form-control" name="CategoryID">
                @foreach (var category in Model.Categories)
                {
                    var selected = category.ID == Model.CategoryID ? "selected" : string.Empty;
                    <option value="@category.ID" @selected>@category.Name</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label> Description</label>
            <input class="form-control" name="Description" value="@Model.Description" />
        </div>

        <div class="form-group">
            <label>ActualAmount</label>
            <input class="form-control" name="ActualAmount" value="@Model.ActualAmount" />
        </div>

        <div class="form-group">
            <label>StartingTime</label>
            <input class="form-control" name="StartingTime" value="@Model.StartingTime" />
        </div>

        <div class="form-group">
            <label>EndingTime</label>
            <input class="form-control" name="EndingTime" value="@Model.EndingTime" />
        </div>

        @*--------home work-------*@
        <div class="form-group">
            <label>Select pictures</label>
            <input id="AuctionPictures" class="form-control" name="AuctionPictures" type="file" multiple />
            <div id="picturesArea" class="mt-2"></div>
            @if (Model.AuctionPicturesList != null && Model.AuctionPicturesList.Count > 0)
            {
                foreach (var picture in Model.AuctionPicturesList)
                {
                    <img class='image img-thumbnail' src='/Content/images/@picture.Picture.URL' data-id="@picture.ID" style="width:200px; height:200px" />
                }
            }
            <input type="hidden" name="Auctionpictures" id="pictureIDs" />
        </div>
        @*----------------------------*@


    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button class="btn btn-primary" type="button" id="SaveButton">Save</button>
    </div>
</form>

<script>
     RemoveImageOnClick();
    $("#SaveButton").click(function () {

            var imageIDs = [];
        $("#picturesArea .image").each(function () {
            var imageID = $(this).attr("data-id");
            imageIDs.push(imageID);
        });
        $("#pictureIDs").val(imageIDs.join());
            $.ajax({
                url: "@Url.Action("edit","Auctions")",
                method: "post",
                data: $("#EditForm").serialize()
            }).done(function (response) {
                debugger;
                $("#listArea").html(response);
                $("#formModal").modal("toggle");
            });
        });
    //-------------------------Home Work-----------------------------------------------
          $("#AuctionPictures").change(function () {
        var pictures = this.files;
        var picsData = new FormData();
        for (var i = 0; i < pictures.length; i++) {
            picsData.append("Picture", pictures[i]);
        }
        $.ajax({
                 url: "@Url.Action("UploadPictures","Shared")",
                 method: "post",
                 data: picsData,
                 dataType: "json",
                 processData: false,
                 contentType: false

                }).done(function (responses) {
                 for (var i = 0; i < responses.length; i++) {
                var picResponse = responses[i];
                debugger;
                AttachNewImage(picResponse.pictureURL, picResponse.ID);
            }
        });
          });
    

    //-------------------------------------------------------------------------------------
</script>


